import java.io.*;
import java.net.*;
import java.nio.file.Files;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.filechooser.FileNameExtensionFilter;

public class ChatClient {
    private static final String SERVER_ADDRESS = "192.168.18.31";
    private static final int SERVER_PORT = 12345;
    
    private JFrame frame;
    private JTextArea chatArea;
    private JTextField inputField;
    private PrintWriter out;
    private BufferedReader in;
    private Socket socket;

    public ChatClient() {
        initializeGUI();
        connectToServer();
    }

    private void initializeGUI() {
        frame = new JFrame("채팅 클라이언트");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(400, 300);
        
        chatArea = new JTextArea();
        chatArea.setEditable(false);
        JScrollPane scrollPane = new JScrollPane(chatArea);
        
        inputField = new JTextField();
        JButton sendButton = new JButton("전송");
        JButton fileButton = new JButton("파일");
        
        sendButton.addActionListener(e -> sendMessage());
        inputField.addActionListener(e -> sendMessage());
        fileButton.addActionListener(e -> sendFile());
        
        JPanel inputPanel = new JPanel(new BorderLayout());
        JPanel buttonPanel = new JPanel(new GridLayout(1, 2));
        buttonPanel.add(sendButton);
        buttonPanel.add(fileButton);
        inputPanel.add(inputField, BorderLayout.CENTER);
        inputPanel.add(buttonPanel, BorderLayout.EAST);
        
        frame.add(scrollPane, BorderLayout.CENTER);
        frame.add(inputPanel, BorderLayout.SOUTH);
        
        frame.setVisible(true);
    }

    private void connectToServer() {
        try {
            socket = new Socket(SERVER_ADDRESS, SERVER_PORT);
            out = new PrintWriter(socket.getOutputStream(), true);
            in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            
            chatArea.append("서버 " + SERVER_ADDRESS + ":" + SERVER_PORT + "에 연결됨\n");
            
            new Thread(() -> {
                try {
                    String message;
                    while ((message = in.readLine()) != null) {
                        if (message.startsWith("FILE:")) {
                            String[] parts = message.split(":", 3);
                            String sender = parts[1];
                            String fileName = parts[2];
                            int fileSize = Integer.parseInt(in.readLine());
                            byte[] fileData = new byte[fileSize];
                            InputStream is = socket.getInputStream();
                            int bytesRead = 0;
                            while (bytesRead < fileSize) {
                                bytesRead += is.read(fileData, bytesRead, fileSize - bytesRead);
                            }
                            saveFile(fileName, fileData);
                            chatArea.append("파일 수신: " + fileName + "\n");
                        } else {
                            chatArea.append(message.substring(5) + "\n");
                        }
                        chatArea.setCaretPosition(chatArea.getDocument().getLength());
                    }
                } catch (IOException e) {
                    chatArea.append("메시지 수신 중 오류: " + e.getMessage() + "\n");
                }
            }).start();
            
        } catch (IOException e) {
            chatArea.append("서버 연결 중 오류: " + e.getMessage() + "\n");
        }
    }

    private void sendMessage() {
        String message = inputField.getText().trim();
        if (!message.isEmpty() && out != null) {
            out.println(message);
            inputField.setText("");
        }
    }

    private void sendFile() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("Images & Files", "jpg", "png", "txt"));
        if (fileChooser.showOpenDialog(frame) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                byte[] fileData = Files.readAllBytes(file.toPath());
                out.println("FILE:" + file.getName());
                out.println(fileData.length);
                OutputStream os = socket.getOutputStream();
                os.write(fileData);
                os.flush();
                chatArea.append("파일 전송: " + file.getName() + "\n");
            } catch (IOException e) {
                chatArea.append("파일 전송 중 오류: " + e.getMessage() + "\n");
            }
        }
    }

    private void saveFile(String fileName, byte[] fileData) {
        try {
            Files.write(new File("received_" + fileName).toPath(), fileData);
        } catch (IOException e) {
            chatArea.append("파일 저장 중 오류: " + e.getMessage() + "\n");
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(ChatClient::new);
    }
}