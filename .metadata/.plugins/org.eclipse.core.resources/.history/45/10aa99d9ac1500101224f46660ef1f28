import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.util.List;

public class TodoListManager {

	private static final String FILE_NAME = "todo.txt";

	public static void loadTodo(List<Todo> list) {
		File file = new File(FILE_NAME);

		if (!file.exists()) {
			System.out.println("저장된 파일 없음");
			return;
		}

		try (BufferedReader br = new BufferedReader(new FileReader(file))) {
			String line;
			while ((line = br.readLine()) != null) {
				String[] parts = line.split("##");
				if (parts.length < 6)
					continue;

				LocalDateTime dateTime = LocalDateTime.parse(parts[0]);
				String title = parts[1];
				String comment = parts[2];
				String star = parts[3];
				boolean check = Boolean.parseBoolean(parts[4]);
				int key = Integer.parseInt(parts[5]);

				Todo todo = new Todo(dateTime, title, comment, star);
				todo.setCheck(check);
				todo.setKey(key);

				list.add(todo);
			}
			System.out.println("[불러오기 완료] " + list.size() + "개의 항목을 불러왔습니다.");
		} catch (IOException e) {
			System.out.println("파일 읽기 중 오류 발생: " + e.getMessage());
		}
	}

	public static void saveTodo(List<Todo> list) {
		try (BufferedWriter bw = new BufferedWriter(new FileWriter(FILE_NAME))) {
			for (Todo todo : list) {
				String line = todo.getLocalDateTime().toString() + "##" + todo.getTitle() + "##" + todo.getComment()
						+ "##" + todo.getStar() + "##" + todo.isCheck() + "##" + todo.getKey();
				bw.write(line);
				bw.newLine();
			}
			System.out.println("[저장 완료] todo.txt에 저장되었습니다.");
		} catch (IOException e) {
			System.out.println("파일 저장 중 오류 발생: " + e.getMessage());
		}
	}

	public static void main(String[] args) {

		// 예시 실행 흐름
		TodoList todoList = new TodoList();

		// 시작 시 불러오기
		loadTodo(todoList.getList());

		// 메인 실행
		Main.run(todoList);

		// 종료 시 저장
		saveTodo(todoList.getList());
		
		

	}

}
