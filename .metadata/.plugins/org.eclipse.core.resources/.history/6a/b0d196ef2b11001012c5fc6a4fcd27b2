import java.io.*;
import java.net.*;
import java.text.SimpleDateFormat;
import java.util.*;

public class ChatServer {
    private static final int PORT = 12345;
    private static HashMap<String, PrintWriter> clients = new HashMap<>();
    private static List<String> chatHistory = new ArrayList<>();
    private static SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");

    public static void main(String[] args) {
        try (ServerSocket serverSocket = new ServerSocket(PORT)) {
            InetAddress ip = InetAddress.getLocalHost();
            System.out.println("서버 IP: " + ip.getHostAddress());
            System.out.println("서버가 포트 " + PORT + "에서 시작되었습니다.");
            
            Runtime.getRuntime().addShutdownHook(new Thread(() -> saveChatHistory()));
            
            while (true) {
                new Handler(serverSocket.accept()).start();
            }
        } catch (IOException e) {
            System.out.println("서버 시작 중 오류: " + e.getMessage());
        }
    }

    private static void broadcast(String message) {
        synchronized (clients) {
            for (PrintWriter writer : clients.values()) {
                writer.println(message);
            }
        }
    }

    private static void saveChatHistory() {
        try (PrintWriter writer = new PrintWriter("chat_history.txt")) {
            for (String message : chatHistory) {
                writer.println(message);
            }
            System.out.println("채팅 기록이 저장되었습니다.");
        } catch (FileNotFoundException e) {
            System.out.println("채팅 기록 저장 중 오류: " + e.getMessage());
        }
    }

    private static class Handler extends Thread {
        private Socket socket;
        private PrintWriter out;
        private BufferedReader in;
        private String username;

        public Handler(Socket socket) {
            this.socket = socket;
        }

        public void run() {
            try {
                in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                out = new PrintWriter(socket.getOutputStream(), true);
                
                // 사용자 이름 입력 받기
                out.println("이름을 입력해주세요:");
                username = in.readLine();
                if (username == null || username.trim().isEmpty()) {
                    username = "익명" + new Random().nextInt(1000);
                }

                synchronized (clients) {
                    clients.put(username, out);
                    // 현재 접속자 목록 전송
                    out.println("현재 접속자: " + String.join(", ", clients.keySet()));
                    // 접속 알림
                    String joinMessage = "[알림] " + username + "님이 접속하였습니다.";
                    chatHistory.add(joinMessage);
                    broadcast(joinMessage);
                }

                String message;
                while ((message = in.readLine()) != null) {
                    String formattedMessage = "[" + sdf.format(new Date()) + "] " + username + " : " + message;
                    System.out.println("수신: " + formattedMessage);
                    chatHistory.add(formattedMessage);
                    broadcast(formattedMessage);
                }
            } catch (IOException e) {
                System.out.println("클라이언트 처리 중 오류: " + e.getMessage());
            } finally {
                if (username != null) {
                    synchronized (clients) {
                        clients.remove(username);
                        String leaveMessage = "[알림] " + username + "님이 퇴장하였습니다.";
                        chatHistory.add(leaveMessage);
                        broadcast(leaveMessage);
                    }
                }
                try {
                    socket.close();
                } catch (IOException e) {
                    System.out.println("소켓 닫기 오류: " + e.getMessage());
                }
            }
        }
    }
}